<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 我的全新 Hugo 网站</title>
        <link>https://Parksosaurus.github.io/posts/</link>
        <description>All Posts | 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 02 May 2024 17:03:36 &#43;0800</lastBuildDate><atom:link href="https://Parksosaurus.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>纵览设计模式-01-导论</title>
    <link>https://Parksosaurus.github.io/post/comeration-design-mode01introduction-z2wtveo.html</link>
    <pubDate>Thu, 02 May 2024 17:03:36 &#43;0800</pubDate>
    <author>parkso</author>
    <guid>https://Parksosaurus.github.io/post/comeration-design-mode01introduction-z2wtveo.html</guid>
    <description><![CDATA[总览设计模式-01-导论 概述 在1994年,由Erich Gamma、Richard Helm、Ralph Johnson和John Vlissides 四人合著出版了]]></description>
</item>
<item>
    <title>1400-1600</title>
    <link>https://Parksosaurus.github.io/post/1400-1600-zlnw6e.html</link>
    <pubDate>Thu, 02 May 2024 11:36:48 &#43;0800</pubDate>
    <author>parkso</author>
    <guid>https://Parksosaurus.github.io/post/1400-1600-zlnw6e.html</guid>
    <description><![CDATA[1400-1600 3111. 覆盖所有点的最少矩形数目 题目描述 给你一个二维整数数组 point ，其中 points[i] = [xi, yi] 表示二维平面内的一个点。同时给你一个整数 w 。 你需要用矩形 覆盖所有 点。]]></description>
</item>
<item>
    <title>My First Post</title>
    <link>https://Parksosaurus.github.io/posts/my-first-post/</link>
    <pubDate>Wed, 01 May 2024 15:28:28 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>https://Parksosaurus.github.io/posts/my-first-post/</guid>
    <description><![CDATA[哈哈我是爸爸]]></description>
</item>
<item>
    <title>Test</title>
    <link>https://Parksosaurus.github.io/posts/test/</link>
    <pubDate>Wed, 01 May 2024 15:26:07 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>https://Parksosaurus.github.io/posts/test/</guid>
    <description><![CDATA[lodjasd ]]></description>
</item>
<item>
    <title>volatile详解</title>
    <link>https://Parksosaurus.github.io/post/volatile-detailed-explanation-15k3tj.html</link>
    <pubDate>Sun, 19 Feb 2023 14:15:28 &#43;0800</pubDate>
    <author>xxxx</author>
    <guid>https://Parksosaurus.github.io/post/volatile-detailed-explanation-15k3tj.html</guid>
    <description><![CDATA[volatile详解 简介 volatile是JVM提供的轻量级的同步机制 保证可见性 保证有序性，防止指令重排 不保证原子性(需要借助synchro]]></description>
</item>
<item>
    <title>Redis持久化机制</title>
    <link>https://Parksosaurus.github.io/post/redis-persistence-mechanism-zqmfur.html</link>
    <pubDate>Mon, 16 Jan 2023 14:40:51 &#43;0800</pubDate>
    <author>parkso</author>
    <guid>https://Parksosaurus.github.io/post/redis-persistence-mechanism-zqmfur.html</guid>
    <description><![CDATA[Redis持久化机制 ‍ Redis因为是基于内存的数据库，所以需要进行数据的持久化。 Redis通过RDB快照和AOF日志来实现数据的持久化 这两]]></description>
</item>
</channel>
</rss>
